name: CI/CD Backend (.NET Core 9)

on:
  push:
    branches: [ master ]
    paths:
      - 'src/backend/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/backend/**'
  # Adiciona a opção de disparo manual com entradas
  workflow_dispatch:
    inputs:
      aspnetcore_environment:
        description: 'ASP.NET Core Env (ex.: Development, Test)'
        required: true
        default: 'Development'
      port:
        description: 'Port (ex.: 8080)'
        required: true
        default: '8080'

jobs:
  backend-build-and-test:
    runs-on: ubuntu-latest

    env:
      ASPNETCORE_ENVIRONMENT: ${{ github.event.inputs.aspnetcore_environment || 'Development' }}
      PORT: ${{ github.event.inputs.port || '8080' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure .NET Core 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        working-directory: ./
        run: dotnet restore Interview.Taller.sln

      - name: Build Code
        working-directory: ./src/backend/Interview.BackendApi
        env:
          ASPNETCORE_ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}
          PORT: ${{ env.PORT }}
        run: dotnet build --configuration Release --no-restore
      
      - name: Build Tests
        working-directory: ./tests/Interview.Api.Tests
        env:
          ASPNETCORE_ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}
          PORT: ${{ env.PORT }}
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        working-directory: ./tests/Interview.Api.Tests
        env:
          ASPNETCORE_ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}
          PORT: ${{ env.PORT }}
        run: dotnet test --configuration Release --no-build --logger "console;verbosity=detailed"

      - name: Build Docker Image (optional, simulation for deployment)
        if: success()
        working-directory: ./src/backend
        env:
          ASPNETCORE_ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}
          PORT: ${{ env.PORT }}
        run: docker build -t backend-service-dotnet:latest --build-arg ASPNETCORE_ENVIRONMENT=${{ env.ASPNETCORE_ENVIRONMENT }} --build-arg PORT=${{ env.PORT }} .

      - name: Code Analysis
        working-directory: ./src/backend/Interview.BackendApi
        env:
          ASPNETCORE_ENVIRONMENT: ${{ env.ASPNETCORE_ENVIRONMENT }}
          PORT: ${{ env.PORT }}
        run: dotnet format
  
  frontend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./src/frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./src/frontend
        run: npm ci

      - name: Build
        working-directory: ./src/frontend
        run: npm run build -- --configuration=production